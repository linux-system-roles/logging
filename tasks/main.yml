---
- name: Set Rsyslog facts then include rsyslog role
  block:

    - name: Set rsyslog_enabled
      set_fact:
        rsyslog_enabled: "{{ logging_enabled | d(true) }}"

    - name: Set rsyslog_output_elasticsearch for the omelasticsearch output
      set_fact:
        rsyslog_output_elasticsearch: "{{ logging_outputs | selectattr('name', 'defined') | selectattr('type', 'defined') | selectattr('type', '==', 'elasticsearch') | list }}"

    - name: Set rsyslog_output_files for the omfile outputs
      set_fact:
        rsyslog_output_files: "{{ logging_outputs | selectattr('name', 'defined') | selectattr('type', 'defined') | selectattr('type', '==', 'files') | list }}"

    - name: Set files output if rsyslog_output_files is empty and logging_inputs is not empty
      set_fact:
        rsyslog_output_files: [ {"name": "default_files", "type": "files"} ]
      when:
        - rsyslog_output_files | d([]) | length == 0
        - logging_inputs | d([])

    - name: Set rsyslog_output_forwards for the omfwd output
      set_fact:
        rsyslog_output_forwards: "{{ logging_outputs | selectattr('name', 'defined') | selectattr('type', 'defined') | selectattr('target', 'defined') | selectattr('type', '==', 'forwards') | list }}"

    - name: Set rsyslog_outputs
      set_fact:
        rsyslog_outputs: '{{ rsyslog_output_elasticsearch | d([]) }} + {{ rsyslog_output_files | d([]) }} + {{ rsyslog_output_forwards | d([]) }}'

    - name: Set rsyslog_purge_original_conf fact to purge all configuration files before saving the new ones.
      set_fact:
        rsyslog_purge_original_conf: yes
      when: logging_purge_confs | d(false)

    - name: Set custom_config_files fact
      set_fact:
        rsyslog_custom_config_files: "{{ item.custom_config_files }}"
      with_items: "{{ logging_outputs }}"
      when:
        - item.type | d('') == 'custom'
        - logging_enabled | d(true)

    - name: Re-read facts after adding custom fact
      setup:
        filter: ansible_local
      when: logging_debug | d(false)

    - name: Create rsyslog debug dir
      file:
        path: "{{ role_path }}/debug"
        state: directory
        mode: 0700
      when: logging_debug | d(false)

    - name: Delete debug file
      file:
        path: "{{ role_path }}/debug/main.yml"
        state: absent
      ignore_errors: true
      when: logging_debug | d(false)

    - name: Create rsyslog debug file
      lineinfile:
        path: "{{ role_path }}/debug/main.yml"
        create: yes
        line: "#ANSIBLE MANAGED VARIABLES FILE"
      when: logging_debug | d(false)

    - name: Populate rsyslog debug file
      lineinfile:
        path: "{{ role_path }}/debug/main.yml"
        create: yes
        line: "{{ item.key }}: {{ item.value | d() | to_nice_json(indent=2) }}"
      with_dict: "{{ hostvars[inventory_hostname] }}"
      when:
        - item.key is match("rsyslog*")
        - logging_debug | d(false)

    - name: Include Rsyslog role
      include_role:
        name: "{{ role_path }}/roles/rsyslog"

  when: logging_collector | d('rsyslog') == 'rsyslog'
