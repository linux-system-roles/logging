---
# oVirt configuration
# ---------------------

# Available configuration set
# ----------------------------

rsyslog_unprivileged: false

rsyslog_elasticsearch: []


# oVirt Rsyslog configuration rules
# ---------------------------

__rsyslog_ovirt_rules:
  - '{{ rsyslog_conf_local_ovirt_modules }}'
  - '{{ rsyslog_conf_ovirt_main_modules }}'
  - '{{ rsyslog_conf_ovirt_formatting }}'
  - '{{ rsyslog_rulebase_ovirt_parse_json }}'
  - '{{ rsyslog_rulebase_ovirt_engine }}'
  - '{{ rsyslog_rulebase_ovirt_vdsm }}'

# Default oVirt configuration options
# -----------------------------------

# .. envvar:: rsyslog_conf_local_ovirt_modules
#
# List of ``rsyslogd`` modules that enable logs from the local system to be
# received and parsed by the ``rsyslogd`` daemon.
rsyslog_conf_local_ovirt_modules:

  - name: 'local-ovirt-modules'
    type: 'modules'
    state: '{{ "present"
              if not (rsyslog_default | bool)
              else "absent" }}'
    sections:

      - comment: 'Log messages sent to local UNIX socket with use=off'
        options: |-
          module(load="imuxsock" SysSock.use="off")

rsyslog_conf_ovirt_main_modules:

  - name: 'ovirt_main'
    type: 'modules'
    sections:

      - options: |-
          # Read from file with inotify enabled
          module(load="imfile" mode="inotify")

      - options: |-
          # Read from tcp collectd metrics
          module(load="imtcp")

      - options: |-
          # Normalize logs
          module(load="mmnormalize")

      - options: |-
          # Parse logs to JSON
          module(load="mmjsonparse")

rsyslog_conf_ovirt_formatting:

  - name: 'ovirt_formatting'
    type: 'template'
    path: '{{ rsyslog_config_dir }}'
    sections:

      - options: |-
          # formatting

          template(name="cnvt_to_viaq_timestamp" type="list") {
              property(name="TIMESTAMP" dateFormat="rfc3339")
          }

          input (name="ovirt_imtcp" type="imtcp" port="{{ rsyslog_read_collectd_port | d(44514) }}")
          if $syslogtag startswith 'collectd' then {
              set $!original_raw_message = $msg;
              action(name="collectd_mmjsonparse" type="mmjsonparse" cookie="") # parse entire message as json
              set $!@timestamp = exec_template('cnvt_to_viaq_timestamp');
              unset $!time;
              if $!collectd!plugin == 'virt' then {
                  set $!ovirt!entity = 'vms';
              } else {
                  set $!ovirt!entity = 'hosts';
              }
          }

          # add eventrouter
          if $syslogtag startswith 'collectd' then {
          {% if ovirt_env_uuid_logs is defined %}
              set $.index_prefix = "{{ rsyslog_elasticsearch_index_prefix_metrics | d("project.ovirt-metrics") }}" & "-" & "{{ ovirt_env_name | d("engine") }}" & "." & "{{ ovirt_env_uuid_metrics }}" & ".";
          {% else %}
              set $.index_prefix = "{{ rsyslog_elasticsearch_index_prefix_metrics | d("project.ovirt-metrics") }}" & "-" & "{{ ovirt_env_name | d("engine") }}" & ".";
          {% endif %}
              set $.logs_collection = "ovirt";
              set $.send_targets_only = "true";
          }

          {% if collect_ovirt_engine_log %}
          input(type="imfile" file="{{ rsyslog_system_log_dir }}/ovirt-engine/engine.log" tag="ovirt.engine" reopenOnTruncate="on"
                startmsg.regex="^[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}")

          if $syslogtag == 'ovirt.engine' then {
            action(name="ovirt-engine_mmnormalize" type="mmnormalize" rulebase="{{ rsyslog_config_dir }}/ovirt_engine.rulebase" path="$.ovirt")
          }
          {% endif %}

          {% if collect_ovirt_vdsm_log %}
          input(type="imfile" file="{{ rsyslog_system_log_dir }}/vdsm/vdsm.log" tag="ovirt.vdsm" reopenOnTruncate="on"
                startmsg.regex="^[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}")

          if $syslogtag == 'ovirt.vdsm' then {
            action(name="ovirt-vdsm_mmnormalize" type="mmnormalize" rulebase="{{ rsyslog_config_dir }}/ovirt_vdsm.rulebase" path="$.ovirt")
          }
          {% endif %}

          {% if collect_ovirt_vdsm_log or collect_ovirt_engine_log%}
          if $syslogtag startswith "ovirt" then {
          {% if ovirt_env_uuid_logs is defined %}
              set $.index_prefix = "{{ rsyslog_elasticsearch_index_prefix_logs | d("project.ovirt-logs") }}" & "-" & "{{ ovirt_env_name | d("engine") }}" & "." & "{{ ovirt_env_uuid_logs }}" & ".";
          {% else %}
              set $.index_prefix = "{{ rsyslog_elasticsearch_index_prefix_logs | d("project.ovirt-logs") }}" & "-" & "{{ ovirt_env_name | d("engine") }}" & ".";
          {% endif %}
            # Add ovirt logs specific metadata
              set $!@timestamp = $.ovirt!date & "T" & $.ovirt!time & "." & $.ovirt!msec & $.ovirt!tz;
              set $!service = $syslogtag;
              set $!message = $.ovirt!message;
              set $!level = $.ovirt!level;
              set $!hostname = '{{ ansible_fqdn }}';
              set $!ovirt!cluster_name = '{{ ovirt_vds_cluster_name | d("") }}';
              set $!ipaddr4 = '{{ ansible_default_ipv4.address }}';
              set $!ovirt!engine_fqdn = '{{ ovirt_engine_fqdn | d("") }}';
              set $.logs_collection = "ovirt";
              set $!ovirt!class = $.ovirt!class;
              set $!ovirt!thread = $.ovirt!thread;
              set $.send_targets_only = "true";

              unset $!metadata;

              if ($syslogtag == 'ovirt.engine') and ($.ovirt!correlationid != "") then {
                set $!ovirt!correlationid = $.ovirt!correlationid;
              }
          }
          {% endif %}

rsyslog_rulebase_ovirt_engine:

  - name: 'ovirt_engine'
    filename: 'ovirt_engine.rulebase'
    nocomment: true
    path: '{{ rsyslog_config_dir }}'
    sections:
      - options: |-
          version=2
          rule=:%date:date-iso% %time:time-24hr%,%msec:number%%tz:word% %level:word%%-:whitespace%%class:string{"quoting.char.begin":"[","quoting.char.end":"]"}% %thread:string{"quoting.char.begin":"(","quoting.char.end":")"}% %correlationid:string{"quoting.char.begin":"[","quoting.char.end":"]"}% %message:rest%

rsyslog_rulebase_ovirt_vdsm:

  - name: 'ovirt_vdsm'
    filename: 'ovirt_vdsm.rulebase'
    nocomment: true
    path: '{{ rsyslog_config_dir }}'
    sections:
      - options: |-
          version=2
          rule=:%date:date-iso% %time:time-24hr%,%msec:number%%tz:word% %level:word%%-:whitespace%%class:string{"quoting.char.begin":"(","quoting.char.end":")"}% %thread:string{"quoting.char.begin":"[","quoting.char.end":"]"}% %message:rest%

rsyslog_rulebase_ovirt_parse_json:

  - name: 'parse_json'
    filename: 'parse_json.rulebase'
    nocomment: true
    path: '{{ rsyslog_config_dir }}'
    sections:

      - options: |-
          version=2
          rule=:%.:json%
