---
# Basic logs configuration set
# ----------------------------
#
# __rsyslog_basics_packages
#
# List of default rpm packages to install.
__rsyslog_basics_packages: []

rsyslog_pki: true

# rsyslog_capabilities is an array which takes 'network', 'remote-files', 'tls'
# 'network' enables input and output over network.
# 'remote-files' allows input from remote hosts are separately stored from the local logs.
# 'tls' specifies the input and output could be processed over tls.
#       Note: unles rsyslog_send_over_tls_only is set to true, insecure network connection
#       is also allowed.
rsyslog_capabilities: []

rsyslog_use_imuxsock: false

# __rsyslog_basics_rules
#
# List of YAML dictionaries, each dictionary should contain ``rsyslogd`` configuration
# in a special format. This list specifies ``rsyslogd`` basic input configuration.
__rsyslog_basics_rules:
  - '{{ __rsyslog_conf_local_basics_modules }}'
  - '{{ __rsyslog_conf_system_input }}'

# __rsyslog_conf_local_basics_modules
#
# List of ``rsyslogd`` modules that enable logs from the local system to be
# received and parsed by the ``rsyslogd`` daemon.
__rsyslog_conf_local_basics_modules:

  - name: 'input-basics-modules'
    type: 'modules'
    sections:

      - comment: 'Reads kernel messages (the same are read from journald)'
        options: |-
          module(load="imklog" permitnonkernelfacility="on")
        state: '{{ "present"
                  if ("kernel-message" in rsyslog_capabilities)
                  else "absent" }}'

      - comment: 'System log messages'
        options: |-
          # Log messages sent to local UNIX socket
          module(load="imuxsock"    # provides support for local system logging (e.g. via logger command)
          {% if rsyslog_use_imuxsock %}
                 SysSock.Use="on")  # Turn on message reception via local log socket.
          {% else %}
                 SysSock.Use="off") # Turn off message reception via local log socket.
          {% endif %}
          # Read from journald
          {% for input in logging_inputs %}
          {%   if loop.first and input.type == "basics" %}
          module(load="imjournal"
                 StateFile="{{ rsyslog_work_dir }}/imjournal.state"
                 RateLimit.Burst="{{ input.rsyslog_imjournal_ratelimit_burst | d(20000) }}"
                 RateLimit.Interval="{{ input.rsyslog_imjournal_ratelimit_interval | d(600) }}"
                 PersistStateInterval="{{ input.rsyslog_imjournal_persist_state_interval | d(10) }}")
          {%   endif %}
          {% endfor %}

# __rsyslog_conf_system_input
#
__rsyslog_conf_system_input:

  - name: 'input-imuxsock'
    type: 'input'
    state: '{{ "present" if rsyslog_use_imuxsock | d(false) | bool else "absent" }}'
    sections:

      - comment: 'Log messages from imuxsock'
        options: |-
          input(name="basics_imuxsock" type="imuxsock" socket="/dev/log")
