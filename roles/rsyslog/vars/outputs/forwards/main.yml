---
# Forwards output configuration
# ---------------------------------
# List of rpm packages for Forwards output.
__rsyslog_forwards_output_packages: []

# Forwards Rsyslog output configuration rules
# ---------------------------------
__rsyslog_forwards_output_rules:
  - '{{ __rsyslog_conf_forwards_output_rules }}'

# __rsyslog_conf_forwards_output_rules:
#
# Enable log forwarding to another ``rsyslogd`` instance if `rsyslog_output_forwards` variables are defined.
__rsyslog_conf_forwards_output_rules:

  - name: 'output-forwards'
    type: 'output'
    state: '{{ "present" if (rsyslog_output_forwards | d())
               else "absent" }}'
    sections:

      - comment: 'Forward logs over TLS by default'
        options: '{{ rsyslog_send_over_tls }}'
        state: '{{ "present" if ("tls" in rsyslog_capabilities)
                   else "absent" }}'

      - comment: 'Forward logs to specified hosts'
        options: |-
          {% for element in rsyslog_output_forwards %}
          {%   if element.exclude is defined %}
          ruleset(name="{{ element.name }}") {
            {{ element.facility | d('*') }}.{{ element.severity | d('*') }};{{ element.exclude }} action(name="{{ element.name }}" type="omfwd" Target="{{ element.target }}" Port="{{ element.port | d(514) }}" Protocol="{{ element.protocol | d('tcp') }}")
          }
          {%   else %}
          ruleset(name="{{ element.name }}") {
            {{ element.facility | d('*') }}.{{ element.severity | d('*') }} action(name="{{ element.name }}" type="omfwd" Target="{{ element.target }}" Port="{{ element.port | d(514) }}" Protocol="{{ element.protocol | d('tcp') }}")
          }
          {%   endif %}
          {% endfor %}
