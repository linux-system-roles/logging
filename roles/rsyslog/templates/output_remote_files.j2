{% if _output.remote_log_path | d() or _output.remote_sub_path | d() %}
{%   if _output.remote_log_path | d() %}
{%     set __remote_log_path = _output.remote_log_path %}
{%   else %}
{%     set __remote_log_path = __rsyslog_system_log_dir ~ _output.remote_sub_path %}
{%   endif %}
{%   if _output.comment | d() %}
# {{ _output.comment }}
{%   endif %}
template(
  name="{{ _output.name }}_template"
  type="string"
  string="{{ __remote_log_path }}"
)
ruleset(name="{{ _output.name }}"
        queue.type="{{ logging_server_queue_type }}"
        queue.size="{{ logging_server_queue_size }}"
        queue.workerThreads="{{ logging_server_threads }}") {
    # Store remote logs in separate logfiles
{%   if _output.property | d() %}
    :{{ _output.property }}, {{ _output.property_op | d('contains') }}, "{{ _output.property_value | d('error') }}" action(name="{{ _output.name }}" type="omfile" DynaFile="{{ _output.name }}_template" DynaFileCacheSize="{{ _output.client_count | d(10) }}" ioBufferSize="{{ _output.io_buffer_size | d('65536') }}" asyncWriting="{{ 'on' if _output.async_writing | d(false) | bool else 'off' }}")
{%   elif _output.exclude | d([]) %}
    {{ _output.facility | d('*') }}.{{ _output.severity | d('*') }};{{ _output.exclude | join(';') }} action(name="{{ _output.name }}" type="omfile" DynaFile="{{ _output.name }}_template" DynaFileCacheSize="{{ _output.client_count | d(10) }}" ioBufferSize="{{ _output.io_buffer_size | d('65536') }}" asyncWriting="{{ 'on' if _output.async_writing | d(false) | bool else 'off' }}")
{%   else %}
    {{ _output.facility | d('*') }}.{{ _output.severity | d('*') }} action(name="{{ _output.name }}" type="omfile" DynaFile="{{ _output.name }}_template" DynaFileCacheSize="{{ _output.client_count | d(10) }}" ioBufferSize="{{ _output.io_buffer_size | d('65536') }}" asyncWriting="{{ 'on' if _output.async_writing | d(false) | bool else 'off' }}")
{%   endif %}
}
{% else %}
{%   set __remote_log_path = __rsyslog_system_log_dir ~ '/remote' %}
# Per-Host Templates for Remote Systems
template(
  name="RemoteMessage"
  type="string"
  string="{{ __remote_log_path }}/msg/%FROMHOST%/%PROGRAMNAME:::secpath-replace%.log"
)

# Template for Remote host auth logs
template(
  name="RemoteHostAuthLog"
  type="string"
  string="{{ __remote_log_path }}/auth/%FROMHOST%/%PROGRAMNAME:::secpath-replace%.log"
)

# Template for Remote host cron logs
template(
  name="RemoteHostCronLog"
  type="string"
  string="{{ __remote_log_path }}/cron/%FROMHOST%/%PROGRAMNAME:::secpath-replace%.log"
)

# Template for Remote service mail logs
template(
  name="RemoteHostMailLog"
  type="string"
  string="{{ __remote_log_path }}/mail/%FROMHOST%/%PROGRAMNAME:::secpath-replace%.log"
)

ruleset(name="{{ _output.name }}") {
    # Store remote logs in separate logfiles
    authpriv.*   action(name="remote_authpriv_host_log" type="omfile" DynaFile="RemoteHostAuthLog")
    *.info;mail.none;authpriv.none;cron.none action(name="remote_message" type="omfile" DynaFile="RemoteMessage")
    cron.*       action(name="remote_cron_log" type="omfile" DynaFile="RemoteHostCronLog")
    mail.*       action(name="remote_mail_service_log" type="omfile" DynaFile="RemoteHostMailLog")
}
{% endif %}
