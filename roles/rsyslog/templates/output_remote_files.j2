{% if __rsyslog_output.remote_log_path | d() or __rsyslog_output.remote_sub_path | d() %}
{%   if __rsyslog_output.remote_log_path | d() %}
{%     set __remote_log_path = __rsyslog_output.remote_log_path %}
{%   else %}
{%     set __remote_log_path = __rsyslog_system_log_dir ~ __rsyslog_output.remote_sub_path %}
{%   endif %}
{%   if __rsyslog_output.comment | d() %}
# {{ __rsyslog_output.comment }}
{%   endif %}
template(
  name="{{ __rsyslog_output.name }}_template"
  type="string"
  string="{{ __remote_log_path }}"
)
{%   if __rsyslog_output.queue is defined %}
{%     set __queue_options = dict() %}
{%     for option in __rsyslog_output.queue.keys() %}
{%       set _none = __queue_options.update({ option | lower : true }) %}
{%     endfor %}
{%   endif %}
ruleset(name="{{ __rsyslog_output.name }}"
{%   if __queue_options.type is not defined %}
        queue.type="{{ logging_server_queue_type }}"
{%   endif %}
{%   if __queue_options.size is not defined %}
        queue.size="{{ logging_server_queue_size }}"
{%   endif %}
{%   if __queue_options.workerthreads is not defined %}
        queue.workerThreads="{{ logging_server_threads }}"
{%   endif %}
{%   if __rsyslog_output.queue is defined %}
        {{ lookup('template', 'general_queue_params.j2') | indent(8) | trim }}
{%   endif %}) {
    # Store remote logs in separate logfiles
{%   if __rsyslog_output.property | d() %}
    :{{ __rsyslog_output.property }}, {{ __rsyslog_output.property_op | d('contains') }}, "{{ __rsyslog_output.property_value | d('error') }}" action(name="{{ __rsyslog_output.name }}" type="omfile" DynaFile="{{ __rsyslog_output.name }}_template" DynaFileCacheSize="{{ __rsyslog_output.client_count | d(10) }}" ioBufferSize="{{ __rsyslog_output.io_buffer_size | d('65536') }}" asyncWriting="{{ 'on' if __rsyslog_output.async_writing | d(false) | bool else 'off' }}"{{ lookup('template', 'general_action_params.j2') | indent(1,true) | regex_replace("\s?\n","") }})
{%   elif __rsyslog_output.exclude | d([]) %}
    {{ __rsyslog_output.facility | d('*') }}.{{ __rsyslog_output.severity | d('*') }};{{ __rsyslog_output.exclude | join(';') }} action(name="{{ __rsyslog_output.name }}" type="omfile" DynaFile="{{ __rsyslog_output.name }}_template" DynaFileCacheSize="{{ __rsyslog_output.client_count | d(10) }}" ioBufferSize="{{ __rsyslog_output.io_buffer_size | d('65536') }}" asyncWriting="{{ 'on' if __rsyslog_output.async_writing | d(false) | bool else 'off' }}"{{ lookup('template', 'general_action_params.j2') | indent(1,true) | regex_replace("\s?\n","") }})
{%   else %}
    {{ __rsyslog_output.facility | d('*') }}.{{ __rsyslog_output.severity | d('*') }} action(name="{{ __rsyslog_output.name }}" type="omfile" DynaFile="{{ __rsyslog_output.name }}_template" DynaFileCacheSize="{{ __rsyslog_output.client_count | d(10) }}" ioBufferSize="{{ __rsyslog_output.io_buffer_size | d('65536') }}" asyncWriting="{{ 'on' if __rsyslog_output.async_writing | d(false) | bool else 'off' }}"{{ lookup('template', 'general_action_params.j2') | indent(1,true) | regex_replace("\s?\n","") }})
{%   endif %}
}
{% else %}
{%   set __remote_log_path = __rsyslog_system_log_dir ~ '/remote' %}
# Per-Host Templates for Remote Systems
template(
  name="RemoteMessage"
  type="string"
  string="{{ __remote_log_path }}/msg/%FROMHOST%/%PROGRAMNAME:::secpath-replace%.log"
)

# Template for Remote host auth logs
template(
  name="RemoteHostAuthLog"
  type="string"
  string="{{ __remote_log_path }}/auth/%FROMHOST%/%PROGRAMNAME:::secpath-replace%.log"
)

# Template for Remote host cron logs
template(
  name="RemoteHostCronLog"
  type="string"
  string="{{ __remote_log_path }}/cron/%FROMHOST%/%PROGRAMNAME:::secpath-replace%.log"
)

# Template for Remote service mail logs
template(
  name="RemoteHostMailLog"
  type="string"
  string="{{ __remote_log_path }}/mail/%FROMHOST%/%PROGRAMNAME:::secpath-replace%.log"
)

{%   if __rsyslog_output.queue is defined %}
ruleset(name="{{ __rsyslog_output.name }}"
        {{ lookup('template', 'general_queue_params.j2') | indent(8) | trim }}) {
{% else %}
ruleset(name="{{ __rsyslog_output.name }}") {
{%   endif %}
    # Store remote logs in separate logfiles
    authpriv.*   action(name="remote_authpriv_host_log" type="omfile" DynaFile="RemoteHostAuthLog"{{ lookup('template', 'general_action_params.j2') | indent(1,true) | regex_replace("\s?\n","") }})
    *.info;mail.none;authpriv.none;cron.none action(name="remote_message" type="omfile" DynaFile="RemoteMessage"{{ lookup('template', 'general_action_params.j2') | indent(1,true) | regex_replace("\s?\n","") }})
    cron.*       action(name="remote_cron_log" type="omfile" DynaFile="RemoteHostCronLog"{{ lookup('template', 'general_action_params.j2') | indent(1,true) | regex_replace("\s?\n","") }})
    mail.*       action(name="remote_mail_service_log" type="omfile" DynaFile="RemoteHostMailLog"{{ lookup('template', 'general_action_params.j2') | indent(1,true) | regex_replace("\s?\n","") }})
}
{% endif %}
