---
# General configuration
# ---------------------

# rsyslog_enabled
#
# Enable or disable ``rsyslog`` management.
rsyslog_enabled: true

# rsyslog_in_image
#
# true if the target host is a container and use rsyslog in the image.
rsyslog_in_image: false

# rsyslog_default
#
# Diploy default ``rsyslog`` configuration file /etc/rsyslog.conf if it is set to true.
# Otherwise, rsyslog.conf just includes configuration files in /etc/rsyslog.d.
rsyslog_default: false

# rsyslog_system_log_dir
#
# Top directory to place logs
rsyslog_system_log_dir: '/var/log'

# rsyslog_config_dir
#
# Configuration directory
rsyslog_config_dir: '/etc/rsyslog.d'

# rsyslog_work_dir
#
# Rsyslog work directory
rsyslog_work_dir: '/var/lib/rsyslog'

# rsyslog_capabilities
#
# List of different capabilities to configure.
# Example:
# rsyslog_capabilities: [ 'network', 'remote-files', 'tls' ]
rsyslog_capabilities: []

# rsyslog_message_reduction
#
# Enable or disable message reduction. This is disabled by default so that log
# parsers like :program:`fail2ban` can work correctly.
rsyslog_message_reduction: false

# rsyslog_purge_original_conf
#
# The pre-existing config files are archived in the tempdir and purged if the
# rsyslog_purge_original_conf is set to `true`.  Default to 'false`.
rsyslog_purge_original_conf: false

# rpm packages
# adding rsyslog packages
# ------------------

# rsyslog_extra_packages
#
# List of extra rpm packages to install.
# If custom configurations are to be installed, which requires additional rsyslog
# packages, this variable can be used to install them.
rsyslog_extra_packages: []

# rsyslog_custom_config_files
#
# List of additional custom config files.
# Each element: full paths to the files to be deployed.
rsyslog_custom_config_files: []

# rsyslog_basics_use_traditional_timestamp_format
#
# Traditional timestamp format looks like 'Mar 27 14:16:47'
# By setting false, it'd change 2020-03-27T14:16:47.139796+00:00)
rsyslog_basics_use_traditional_timestamp_format: true

# Encrypted communication
# ------------------------

# rsyslog_pki
#
# Enable or disable support for X.509 certificates managed by pki_role,
# used for TLS connections.
rsyslog_pki: false

# rsyslog_pki_path
#
# Path to the directory with PKI realms.
rsyslog_pki_path: "/etc/pki"

# rsyslog_pki_realm
#
# Name of the PKi realm to use with ``rsyslogd``.
rsyslog_pki_realm: "domain"

# rsyslog_pki_ca
#
# Name of the root CA certificate used by the ``rsyslog`` role.
rsyslog_pki_ca: "CA.crt"

# rsyslog_pki_crt
#
# Name of the client certificate file used by the ``rsyslog`` role.
rsyslog_pki_crt: "default.crt"

# rsyslog_pki_key
#
# Name of the private key file used by the ``rsyslog`` role.
rsyslog_pki_key: "default.key"

# rsyslog_default_netstream_driver
#
# Specify the default netstrap driver used by the ``imtcp`` module. The
# ``gtls`` will be enabled by default if the support for PKI is enabled,
# otherwise ``ptcp`` will be used.
rsyslog_default_netstream_driver: '{{ "gtls"
                                       if (rsyslog_pki | bool and
                                           "tls" in rsyslog_capabilities)
                                       else "ptcp" }}'

# rsyslog_default_driver_authmode
#
# Specify the default network driver authetication mode. Actualy only
# `x509/name` or `anon` are available:
rsyslog_default_driver_authmode: "x509/name"

# rsyslog_send_over_tls
#
# This configuration is added to the forward options when ``tls`` capability is
# enabled. It's used to configure TLS options.
rsyslog_send_over_tls: |-
  $ActionSendStreamDriver {{ rsyslog_default_netstream_driver }}
  $ActionSendStreamDriverAuthMode {{ rsyslog_default_driver_authmode }}
  {% if rsyslog_default_driver_authmode != "anon" %}
  {%   if rsyslog_send_permitted_peers is string %}
  $ActionSendStreamDriverPermittedPeer {{ rsyslog_send_permitted_peers }}
  {%   else %}
  {%     for peer in rsyslog_send_permitted_peers %}
  $ActionSendStreamDriverPermittedPeer {{ peer }}
  {%     endfor %}
  {%   endif %}
  {% endif %}
  $ActionSendStreamDriverMode 1

# rsyslog_send_over_tls_only
#
# Specify if you want only TLS communications.
rsyslog_send_over_tls_only: false

# rsyslog_domain
#
# The default DNS domain used to accept remote incoming logs from remote hosts.
rsyslog_domain: '{{ ansible_domain if ansible_domain else ansible_hostname }}'

# rsyslog_permitted_peers
#
# List of hostnames, IP addresses or wildcard DNS domains which will be allowed
# by the ``rsyslogd`` server to connect and send logs over TLS.
rsyslog_permitted_peers: ['*.{{ rsyslog_domain }}']

# rsyslog_send_permitted_peers
#
# List of hostnames, IP addresses or wildcard DNS domains which will be
# verified by the ``rsyslogd`` client and will allow to send logs to the remote
# server over TLS.
rsyslog_send_permitted_peers: '{{ rsyslog_permitted_peers }}'


# Firewall, UDP, TCP ports
# ------------------------

# rsyslog_udp_port
#
# The incoming UDP port used for remote logging.
rsyslog_udp_port: '514'

# rsyslog_tcp_port
#
# The incoming TCP port used for remote logging.
rsyslog_tcp_port: '514'

# rsyslog_tcp_tls_port
#
# The incoming TCP TLS port used for remote logging.
rsyslog_tcp_tls_port: '6514'

# Files and Forwards outputs
# --------------------------

rsyslog_output_files: []
rsyslog_output_forwards: []

# Rsyslog configuration rules
# ---------------------------

# rsyslog_weight_map
#
# This is a dictionary map of different configuration "types" corresponding to
# numbers used to sort configuration files in `{{ rsyslog_config_dir }}` directory
# (configuration order is important). You can specify a type in the
# configuration by using the ``item.type`` parameter.
#
# If you change the default weight map values, you will most likely need to
# remove all files from `{{ rsyslog_config_dir }}` to reset the configuration.
rsyslog_weight_map:
  'global': '05'
  'globals': '05'
  'module': '10'
  'modules': '10'
  'template': '20'
  'templates': '20'
  'output': '30'
  'outputs': '30'
  'service': '30'
  'services': '30'
  'rule': '50'
  'rules': '50'
  'ruleset': '50'
  'rulesets': '50'
  'input': '90'
  'inputs': '90'

# __rsyslog_.*_rules
#
# List of YAML dictionaries, each dictionary should contain ``rsyslogd``
# configuration in a special format. This list specifies default ``rsyslogd``
# configuration enabled in the role.
__rsyslog_common_rules:

  - '{{ __rsyslog_conf_global_options }}'
  - '{{ __rsyslog_conf_local_modules }}'
  - '{{ __rsyslog_conf_common_defaults }}'
  - '{{ __rsyslog_conf_default_rulesets }}'
  - '{{ __rsyslog_conf_send_targets_only }}'


# Default configuration options
# -----------------------------

# __rsyslog_conf_global_options
#
# Some of the global ``rsyslogd`` configuration options. See
# http://www.rsyslog.com/doc/v8-stable/rainerscript/global.html for more
# details.
__rsyslog_conf_global_options:

  - filename: '00-global.conf'
    comment: 'Global options'
    options: |-
      global(
        defaultNetstreamDriver="{{ rsyslog_default_netstream_driver }}"
      {% if not rsyslog_default | bool %}
        workDirectory="{{ rsyslog_work_dir }}"
      {% endif %}
      {% if rsyslog_pki | bool and "tls" in rsyslog_capabilities %}
        defaultNetstreamDriverCAFile="{{ rsyslog_pki_path + '/' + rsyslog_pki_realm + '/' + rsyslog_pki_ca }}"
      {%   if rsyslog_default_driver_authmode != "anon" or "network" in rsyslog_capabilities %}
        defaultNetstreamDriverCertFile="{{ rsyslog_pki_path + '/' + rsyslog_pki_realm + '/' + rsyslog_pki_crt }}"
        defaultNetstreamDriverKeyFile="{{ rsyslog_pki_path + '/' + rsyslog_pki_realm + '/' + rsyslog_pki_key }}"
      {%   endif %}
      {% endif %}
      {% if rsyslog_max_message_size is defined %}
        maxMessageSize="{{ rsyslog_max_message_size }}"
      {% endif %}
      )

# __rsyslog_conf_local_modules
#
# List of ``rsyslogd`` modules that enable logs from the local system to be
# received and parsed by the ``rsyslogd`` daemon.
__rsyslog_conf_local_modules:

  - name: 'local-modules'
    type: 'modules'
    state: '{{ "present" if "mark" in rsyslog_capabilities else "absent" }}'
    sections:

      - comment: 'provides --MARK-- message capability'
        options: |-
          module(load="immark" interval={{ (60 * 60) }})

# __rsyslog_conf_common_defaults
#
# List of common ``rsyslogd`` configuration, like new file owner/group and
# permissions, work directory, configuration of message reduction.
__rsyslog_conf_common_defaults:

  - name: 'common-defaults'
    type: 'global'
    sections:

      - comment: 'Log every message'
        options: |-
          $RepeatedMsgReduction {{ "on" if rsyslog_message_reduction | bool else "off" }}

# __rsyslog_conf_default_rulesets
#
# ruleset `remote` directs to the files output role, which is implemented in `filename.remote`.
__rsyslog_conf_default_rulesets:

  - name: 'default-rulesets'
    type: 'rules'
    state: '{{ "present" if ("network" in rsyslog_capabilities) else "absent" }}'
    sections:

      - comment: 'Rules for logs incoming from remote hosts'
        options: |-
          ruleset(name="remote") {
            $IncludeConfig {{ rsyslog_config_dir }}/*.remote
          }

__rsyslog_conf_send_targets_only:

  - name: 'send-targets-only'
    type: 'output'
    weight: '40'
    comment: 'Stops logs that should only be sent to defined targets'
    options: |-
      if ( strlen($.send_targets_only) > 0 ) then {
          if ( $.send_targets_only == 'true' ) then {
              stop
          }
      }
