- name: Ensure that the role runs from imjournal inputs to the multiple omfwd output with noop configs
  hosts: all
  become: true
  vars:
    __test_forward_conf_s_f: /etc/rsyslog.d/30-output-forwards-forwards-severity_and_facility.conf
    __test_forward_conf_f: /etc/rsyslog.d/30-output-forwards-forwards-facility_only.conf
    __test_forward_conf_s: /etc/rsyslog.d/30-output-forwards-forwards-severity_only.conf
    __test_forward_conf_no: /etc/rsyslog.d/30-output-forwards-forwards-no_severity_and_facility.conf
    __test_forward_conf_no_p: /etc/rsyslog.d/30-output-forwards-forwards-no_severity_and_facility_protocol.conf
    __test_forward_conf_no_udp: /etc/rsyslog.d/30-output-forwards-forwards-no_severity_and_facility_udp.conf
    __test_forward_conf_no_p_p: /etc/rsyslog.d/30-output-forwards-forwards-no_severity_and_facility_protocol_port.conf


  tasks:
    - name: Deploy rsyslog config on the target host
      vars:
        logging_purge_confs: true
        logging_outputs:
          - name: forwards-severity_and_facility
            type: forwards
            facility: local1
            severity: info
            protocol: tcp
            target: host.domain
            port: 1514
          - name: forwards-facility_only
            type: forwards
            facility: local2
            protocol: tcp
            target: host.domain
            port: 2514
          - name: forwards-severity_only
            type: forwards
            severity: err
            protocol: tcp
            target: host.domain
            port: 3514
          - name: forwards-no_severity_and_facility
            type: forwards
            protocol: tcp
            target: host.domain
            port: 4514
          - name: forwards-no_severity_and_facility_protocol
            type: forwards
            target: host.domain
            port: 5514
          - name: forwards-no_severity_and_facility_udp
            type: forwards
            protocol: udp
            target: host.domain
            port: 6514
          - name: forwards-no_severity_and_facility_protocol_port
            type: forwards
            target: host.domain
          - name: forwards-no_severity_and_facility_protocol_port_target
            type: forwards
          - target: no_name.localdomain
            type: forwards
        logging_inputs:
          - name: basic_input
            type: basics
        logging_flows:
          - name: flows0
            inputs: [ basic_input ]
            outputs: [forwards-severity_and_facility, forwards-facility_only,
                      forwards-severity_only, forwards-no_severity_and_facility,
                      forwards-no_severity_and_facility_protocol, forwards-no_severity_and_facility_udp,
                      forwards-no_severity_and_facility_protocol_port,
                      forwards-no_severity_and_facility_protocol_port_target]
      include_role:
        name: linux-system-roles.logging

    - include_tasks: set_rsyslog_variables.yml

    # notify restart rsyslogd is executed at the end of this test task.
    # thus we have to force to invoke handlers
    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: Check rsyslog.conf size
      assert:
        that: rsyslog_conf_stat.stat.size < 1000

    - name: Check file counts in rsyslog.d
      assert:
        that: rsyslog_d_file_count.matched >= 6

    # Checking 'error' in stdout from systemctl status is for detecting the case in which rsyslog is running,
    # but some functionality is disabled due to some error, e.g., error: 'tls.cacert' file couldn't be accessed.
    - name: Check rsyslog errors
      command: systemctl status rsyslog
      register: systemctl_result
      failed_when: "'error' in systemctl_result.stdout or systemctl_result.rc != 0"

    - name: Get the forwarding config stat
      stat:
        path: "{{ __test_forward_conf_s_f }}"
      register: stat_output_forwards_system

    - name: Check if the forwarding config exists
      assert:
        that: stat_output_forwards_system.stat.exists

    - name: Grep severity_and_facility
      command: /bin/grep "\<action.*forwards-severity_and_facility\>" {{ __test_forward_conf_s_f }}
      register: severity_and_facility
      changed_when: false

    - name: Check severity_and_facility
      assert:
        that: severity_and_facility.stdout is match(" *local1\.info action.name=.forwards-severity_and_facility.* Target=.host.domain. Port=.1514. Protocol=.tcp.*")

    - name: Grep facility_only
      command: /bin/grep "\<action.*forwards-facility_only\>" {{ __test_forward_conf_f }}
      register: facility_only
      changed_when: false

    - name: Check facility_only
      assert:
        that: facility_only.stdout is match(" *local2\.\* action.name=.forwards-facility_only.* Target=.host.domain. Port=.2514. Protocol=.tcp.")

    - name: Grep severity_only
      command: /bin/grep "\<action.*forwards-severity_only\>" {{ __test_forward_conf_s }}
      register: severity_only
      changed_when: false

    - name: Check severity_only
      assert:
        that: severity_only.stdout is match(" *\*\.err action.name=.forwards-severity_only.* Target=.host.domain. Port=.3514. Protocol=.tcp.*")

    - name: Grep no_severity_and_facility
      command: /bin/grep "\<action.*forwards-no_severity_and_facility\>" {{ __test_forward_conf_no }}
      register: no_severity_and_facility
      changed_when: false

    - name: Check no_severity_and_facility
      assert:
        that: no_severity_and_facility.stdout is match(" *\*\.\* action.name=.forwards-no_severity_and_facility.* Target=.host.domain. Port=.4514. Protocol=.tcp.")

    - name: Grep no_severity_and_facility_protocol
      command: /bin/grep "\<action.*forwards-no_severity_and_facility_protocol\>" {{ __test_forward_conf_no_p }}
      register: no_severity_and_facility_protocol
      changed_when: false

    - name: Check no_severity_and_facility_protocol
      assert:
        that: no_severity_and_facility_protocol.stdout is match(" *\*\.\* action.name=.forwards-no_severity_and_facility_protocol.* Target=.host.domain. Port=.5514. Protocol=.tcp.")

    - name: Grep no_severity_and_facility_udp
      command: /bin/grep "\<action.*forwards-no_severity_and_facility_udp\>" {{ __test_forward_conf_no_udp }}
      register: no_severity_and_facility_udp
      changed_when: false

    - name: Check no_severity_and_facility_udp
      assert:
        that: no_severity_and_facility_udp.stdout is match(" *\*\.\* action.name=.forwards-no_severity_and_facility_udp.* Target=.host.domain. Port=.6514. Protocol=.udp.")

    - name: Grep no_severity_and_facility_protocol_port
      command: /bin/grep "\<action.*forwards-no_severity_and_facility_protocol_port\>" {{ __test_forward_conf_no_p_p }}
      register: no_severity_and_facility_protocol_port
      changed_when: false

    - name: Check no_severity_and_facility_protocol_port
      assert:
        that: no_severity_and_facility_protocol_port.stdout is match(" *\*\.\* action.name=.forwards-no_severity_and_facility_protocol_port.* Target=.host.domain. Port=.514. Protocol=.tcp.")

    - name: Grep no_severity_and_facility_protocol_port_target
      shell: /bin/grep "\<action.*forwards-no_severity_and_facility_protocol_port_target\>" /etc/rsyslog.d/30-output-forwards*.conf
      register: result
      changed_when: false
      failed_when: result.rc != 1

    - name: Grep no_name
      shell: /bin/grep "\<action.*forwards-no_name\.localdomain\>" /etc/rsyslog.d/30-output-forwards*.conf
      register: result
      changed_when: false
      failed_when: result.rc != 1
