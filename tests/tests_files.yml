- name: Ensure that the role runs with parameters from imjournal to four omfiles outputs
  hosts: all
  become: true
  vars:
    __test_files_conf: /etc/rsyslog.d/30-output-files-files_output1.conf

  tasks:
    - name: deploy config to output into local files
      vars:
        logging_enabled: true
        logging_purge_confs: true
        logging_outputs:
          - name: files_output0
            type: files
            facility: authpriv,auth
            path: /var/log/secure
          - name: files_output1
            type: files
            severity: info
            exclude: authpriv.none;auth.none;cron.none;mail.none
            path: /var/log/messages
          - name: files_output2
            type: files
            severity: emerg
            path: :omusrmsg:*
          - name: files_output3
            type: files
            facility: local7
            path: /var/log/boot.log
        logging_inputs:
          - name: basic_input
            type: basics
        logging_flows:
          - name: flow_0
            inputs: [basic_input]
            outputs: [files_output0, files_output1, files_output2, files_output3]
      include_role:
        name: linux-system-roles.logging

    - include: set_rsyslog_variables.yml

    # notify restart rsyslogd is executed at the end of this test task.
    # thus we have to force to invoke handlers
    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: Check rsyslog.conf size
      assert:
        that: rsyslog_conf_line_count.stdout.0 | int <= 7

    - name: Check file counts in rsyslog.d
      assert:
        that: rsyslog_d_file_count.matched >= 6

    - name: Get the files config stat
      stat:
        path: "{{ __test_files_conf }}"
      register: stat_output_files_system

    - name: Check if the files config exists
      assert:
        that: stat_output_files_system.stat.exists

    - name: Grep output to messages line
      command: /bin/grep ".var.log.messages" {{ __test_files_conf }}
      register: files_conf_messages
      changed_when: false

    - name: Check the filter
      assert:
        that: files_conf_messages.stdout is match(" *\*.info;*authpriv.none;auth.none;cron.none;mail.none.*.var.log.messages")

    - name: Run logger to generate a test log message
      command: /bin/logger -i -p local6.info -t testTag0 testMessage0000
      changed_when: false

    - name: Check the test log message in /var/log/messages
      command: /bin/grep testMessage0000 /var/log/messages
      register: testMessage0000
      changed_when: false

    - name: Check if the test message is in /var/log/messages
      assert:
        that: testMessage0000.stdout | length > 0
