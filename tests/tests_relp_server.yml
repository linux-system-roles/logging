# Test the server configuration using tls relp
#
# [Configuration]
# remote inputs configuration using tls relp
#
# [Test scenario]
# 0. Run logging role.
# 1. Check the rsyslog.conf size and the file count in /etc/rsyslog.d.
# 2. Check the configured ports are opened.
#
---
- name: Test the server configuration containing tls tcp, plain tcp and udp connection
  hosts: all
  vars:
    __test_ca_key_name: test-ca-key.pem
    __test_ca_csr: test-ca.csr
    __test_ca_cert_name: test-ca.crt
    __test_key_name: test-key.pem
    __test_csr_name: test-cert.csr
    __test_cert_name: test-cert.pem
    __test_ca_key: "/etc/pki/tls/private/{{ __test_ca_key_name }}"
    __test_ca_cert_csr: "/etc/rsyslog.d/{{ __test_ca_csr }}"
    __test_ca_cert: "/etc/pki/tls/certs/{{ __test_ca_cert_name }}"
    __test_key: "/etc/pki/tls/private/{{ __test_key_name }}"
    __test_cert_csr: "/etc/rsyslog.d/{{ __test_csr_name }}"
    __test_cert: "/etc/pki/tls/certs/{{ __test_cert_name }}"

  tasks:
    - include_tasks: tasks/create_tests_certs.yml

    - name: Deploy rsyslog config on the target host
      vars:
        logging_inputs:
          - name: system_input
            type: basics
          - name: relp_server0
            type: relp
            port: 6514
            tls: true
            ca_cert: "{{ __test_ca_cert }}"
            cert: "{{ __test_cert }}"
            private_key: "{{ __test_key }}"
            pki_authmode: name
            permitted_clients:
              - '*.client.com'
              - '*.example.com'
          - name: relp_server1
            type: relp
            port: 20514
            tls: true
            ca_cert: "{{ __test_ca_cert }}"
            cert: "{{ __test_cert }}"
            private_key: "{{ __test_key }}"
            pki_authmode: name
            permitted_clients:
              - '*.client.com'
              - '*.example.com'
        logging_outputs:
          - name: files_output
            type: files
        logging_flows:
          - name: flows
            inputs: [system_input, relp_server0, relp_server1]
            outputs: [files_output]
      include_role:
        name: linux-system-roles.logging

    - include_tasks: set_rsyslog_variables.yml

    # notify restart rsyslogd is executed at the end of this test task.
    # thus we have to force to invoke handlers
    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: Check rsyslog.conf size
      assert:
        that: rsyslog_conf_stat.stat.size < 1000

    - name: Check file counts in rsyslog.d
      assert:
        that: rsyslog_d_file_count.matched >= 9

    - name: Install lsof
      package:
        name: lsof
        state: present

    - name: lsof outputs for rsyslogd
      shell: |
        set -o pipefail
        lsof -i -nP | grep rsyslogd
      register: __result
      changed_when: false

    - debug:
        msg: "lsof returned {{ __result.stdout }}"

    - name: Check port 6514, 20514 are open for TCP
      shell: |
        set -o pipefail
        lsof -i -nP | grep rsyslogd | grep TCP | grep {{ item }}
      loop: [6514, 20514]
      changed_when: false
