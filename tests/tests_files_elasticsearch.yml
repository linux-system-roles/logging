# Test that the role runs with parameters from imfile to two elasticsearch outputs without certs
#
# [Configuration]
# files input (imfile) ->  2 elasticsearch outputs (omelasticsearch)
#
# [Test scenario]
# 0. Run logging role uploading the fake key/certs files.
# 1. Check rsyslog.conf file size.
#    If logging role is executed, the file size is about 100 bytes.
#    If not executed, the default rsyslog.conf size is larger than 3000 bytes.
#    Thus, assert the size is less than 1000.
# 3. Check file count in /etc/rsyslog.d.
#    If logging role is executed, 9 config files are generated.
#    Other package could add rsyslog config files such as 21-cloudinit.conf to
#    /etc/rsyslog.d and the number varies per RHEL version.
#    Thus, assert the the count is greater than or equal to 9.
# 5. Check if the Elasticsearch output config file 31-output-elasticsearch-elasticsearch_output_ops.conf exists
#    and the config file has 'ruleset(name="elasticsearch_output_ops")'.
# 5. Check if the files input config file 90-input-files-files_input.conf exists
#    and the config file has 'call elasticsearch_output_ops' statement.
#
- name: Ensure that the role runs with parameters from imfile to two elasticsearch outputs without certs
  hosts: all
  become: true
  vars:
    __test_inputfiles_dir: /var/log/inputdirectory
    __test_inputfiles_conf: /etc/rsyslog.d/90-input-files-files_input.conf
    __test_outputfiles_conf: /etc/rsyslog.d/31-output-elasticsearch-elasticsearch_output_ops.conf

  tasks:
    - name: deploy config to send to elasticsearch
      vars:
        logging_outputs:
          - name: elasticsearch_output
            type: elasticsearch
            server_host: logging-es
            server_port: 9200
            index_prefix: project.
            input_type: ovirt
            retryfailures: false
            use_cert: false
          - name: elasticsearch_output_ops
            type: elasticsearch
            server_host: logging-es-ops
            server_port: 9200
            index_prefix: .operations.
            input_type: viaq
            retryfailures: false
            use_cert: false
        logging_inputs:
          - name: files_input
            type: files
            input_log_path: "{{ __test_inputfiles_dir }}/*.log"
        logging_flows:
          - name: flow_0
            inputs: [files_input]
            outputs: [elasticsearch_output, elasticsearch_output_ops]
      include_role:
        name: linux-system-roles.logging

    - include_tasks: set_rsyslog_variables.yml

    # notify restart rsyslogd is executed at the end of this test task.
    # thus we have to force to invoke handlers
    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: Check rsyslog.conf size
      assert:
        that: rsyslog_conf_stat.stat.size < 1000

    - name: Check file counts in rsyslog.d
      assert:
        that: rsyslog_d_file_count.matched >= 9

    - name: Check if the output files config exists
      stat:
        path: "{{ __test_outputfiles_conf }}"
      register: __result
      failed_when: not __result.stat.exists

    - name: Check ops ruleset exists in {{ __test_outputfiles_conf }}
      command: /bin/grep 'ruleset(name="elasticsearch_output_ops")' {{ __test_outputfiles_conf }}
      changed_when: false

    - name: Check call point for ops ruleset exists in {{ __test_inputfiles_conf }}
      command: /bin/grep "call elasticsearch_output_ops" {{ __test_inputfiles_conf }}
      changed_when: false
