- name: Elasticsearch config - local certs are copied to the target host with the specified path.
  hosts: all
  become: true
  vars:
    __test_inputfiles_dir: /var/log/inputdirectory
    __test_inputfiles_conf: /etc/rsyslog.d/90-input-files-files_input.conf
    __test_outputfiles_conf: /etc/rsyslog.d/31-output-elasticsearch-elasticsearch_output.conf
    __test_ca_cert: /tmp/es-ca.crt
    __test_cert: /tmp/es-cert.pem
    __test_key: /tmp/es-key.pem
    __test_ca_cert_target: /tmp/es-ca-target.crt
    __test_cert_target: /tmp/es-cert-target.pem
    __test_key_target: /tmp/es-key-target.pem

  tasks:
    - name: generate test files
      copy:
        dest: "{{ item }}"
        content:
          This is a fake {{ item }}.
      delegate_to: localhost
      loop:
        - "{{ __test_ca_cert }}"
        - "{{ __test_cert }}"
        - "{{ __test_key }}"

    - name: deploy config to send to elasticsearch
      vars:
        logging_outputs:
          - name: elasticsearch_output
            type: elasticsearch
            server_host: logging-es
            server_port: 9200
            index_prefix: project.
            input_type: ovirt
            retryfailures: off
            ca_cert_src: "{{ __test_ca_cert }}"
            cert_src: "{{ __test_cert }}"
            key_src: "{{ __test_key }}"
            ca_cert: "{{ __test_ca_cert_target }}"
            cert: "{{ __test_cert_target }}"
            key: "{{ __test_key_target }}"
        logging_inputs:
          - name: files_input
            type: files
            input_log_path: "{{ __test_inputfiles_dir }}/*.log"
        logging_flows:
          - name: flow_0
            inputs: [files_input]
            outputs: [elasticsearch_output, elasticsearch_output_ops]
      include_role:
        name: linux-system-roles.logging

    - include_tasks: set_rsyslog_variables.yml

    # notify restart rsyslogd is executed at the end of this test task.
    # thus we have to force to invoke handlers
    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: Check rsyslog.conf size
      assert:
        that: rsyslog_conf_stat.stat.size < 1000

    - name: Check file counts in rsyslog.d
      assert:
        that: rsyslog_d_file_count.matched >= 9

    - name: Check if the output files config exists
      stat:
        path: "{{ __test_outputfiles_conf }}"

    - name: Check if the copied ca cert file exists
      stat:
        path: "{{ __test_ca_cert_target }}"

    - name: Check if the copied cert file exists
      stat:
        path: "{{ __test_cert_target }}"

    - name: Check if the copied key file exists
      stat:
        path: "{{ __test_key_target }}"

    - name: Check key/certs in {{ __test_outputfiles_conf }}
      command: /bin/grep "tls\.{{ item.key }}=\"{{ item.value }}\"" {{ __test_outputfiles_conf }}
      with_dict:
        - cacert: "{{ __test_ca_cert_target }}"
        - mycert: "{{ __test_cert_target }}"
        - myprivkey: "{{ __test_key_target }}"
      changed_when: false
