# Test Elasticsearch config - local certs are copied to the target host with the specified path.
#
# Elasticsearch output has this policy:
#   use_cert: If true, key/certificates are used to access Elasticsearch.
#             Triplets {`ca_cert`, `cert`, key`} and/or {`ca_cert_src`,
#             `cert_src`, `key_src`} should be configured. Default to true.
# In this test case, both triplets and use_cert option are properly set.
#
# [Configuration]
# files input (imfile) ->  elasticsearch output (omelasticsearch)
# logging_outputs:
#   - name: elasticsearch_output
#     ca_cert_src: "{{ __test_ca_cert }}"
#     cert_src: "{{ __test_cert }}"
#     key_src: "{{ __test_key }}"
#     ca_cert: "{{ __test_ca_cert_target }}"
#     cert: "{{ __test_cert_target }}"
#     key: "{{ __test_key_target }}"
#     8< snip >8
#
# [Test scenario]
# 0. Generate fake key/certs files.
# 1. Run logging role uploading the fake key/certs files.
# 2. Check rsyslog.conf file size.
#    If logging role is executed, the file size is about 100 bytes.
#    If not executed, the default rsyslog.conf size is larger than 3000 bytes.
#    Thus, assert the size is less than 1000.
# 3. Check file count in /etc/rsyslog.d.
#    If logging role is executed, 9 config files are generated.
#    Other package could add rsyslog config files such as 21-cloudinit.conf to
#    /etc/rsyslog.d and the number varies per RHEL version.
#    Thus, assert the the count is greater than or equal to 9.
# 4. Check if the copied ca cert, cert and key files exist.
# 5. Check if the Elasticsearch output config file 31-output-elasticsearch-elasticsearch_output.conf exists
#    and the specified ca cert, cert and key paths are set in the file.
#
# Note: This is a test for the elasticsearch certs/key.
# The files input to the elasticsearch output is not supported.
#
- name: Elasticsearch config - local certs are copied to the target host with the specified path.
  hosts: all
  become: true
  vars:
    __test_inputfiles_dir: /var/log/inputdirectory
    __test_inputfiles_conf: /etc/rsyslog.d/90-input-files-files_input.conf
    __test_outputfiles_conf: /etc/rsyslog.d/31-output-elasticsearch-elasticsearch_output.conf
    __test_ca_cert: /tmp/es-ca.crt
    __test_cert: /tmp/es-cert.pem
    __test_key: /tmp/es-key.pem
    __test_ca_cert_target: /tmp/es-ca-target.crt
    __test_cert_target: /tmp/es-cert-target.pem
    __test_key_target: /tmp/es-key-target.pem

  tasks:
    - name: Generate fake key/certs files.
      copy:
        dest: "{{ item }}"
        content:
          This is a fake {{ item }}.
      delegate_to: localhost
      loop:
        - "{{ __test_ca_cert }}"
        - "{{ __test_cert }}"
        - "{{ __test_key }}"

    - name: deploy config to send to elasticsearch
      vars:
        logging_outputs:
          - name: elasticsearch_output
            type: elasticsearch
            server_host: logging-es
            server_port: 9200
            index_prefix: project.
            input_type: ovirt
            retryfailures: false
            ca_cert_src: "{{ __test_ca_cert }}"
            cert_src: "{{ __test_cert }}"
            key_src: "{{ __test_key }}"
            ca_cert: "{{ __test_ca_cert_target }}"
            cert: "{{ __test_cert_target }}"
            key: "{{ __test_key_target }}"
        logging_inputs:
          - name: files_input
            type: files
            input_log_path: "{{ __test_inputfiles_dir }}/*.log"
        logging_flows:
          - name: flow_0
            inputs: [files_input]
            outputs: [elasticsearch_output]
      include_role:
        name: linux-system-roles.logging

    - include_tasks: set_rsyslog_variables.yml

    # notify restart rsyslogd is executed at the end of this test task.
    # thus we have to force to invoke handlers
    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: Check rsyslog.conf size
      assert:
        that: rsyslog_conf_stat.stat.size < 1000

    - name: Check file counts in rsyslog.d
      assert:
        that: rsyslog_d_file_count.matched >= 9

    - name: Check if the output files config exists
      stat:
        path: "{{ __test_outputfiles_conf }}"

    - name: Check if the copied ca cert file exists
      stat:
        path: "{{ __test_ca_cert_target }}"

    - name: Check if the copied cert file exists
      stat:
        path: "{{ __test_cert_target }}"

    - name: Check if the copied key file exists
      stat:
        path: "{{ __test_key_target }}"

    - name: Check key/certs in {{ __test_outputfiles_conf }}
      command: /bin/grep 'tls.{{ item.key }}="{{ item.value }}"' {{ __test_outputfiles_conf }}
      with_dict:
        - cacert: "{{ __test_ca_cert_target }}"
        - mycert: "{{ __test_cert_target }}"
        - myprivkey: "{{ __test_key_target }}"
      changed_when: false
